
@{
    ViewData["Title"] = "Index";
}

@section Styles{
    <link rel="stylesheet" href="https://cdn.datatables.net/2.2.2/css/dataTables.dataTables.min.css"/>
}
<!--begin::App Content Header-->
<div class="app-content-header">
    <!--begin::Container-->
    <div class="container-fluid">
        <!--begin::Row-->
        <div class="row">
            <div class="col-sm-6"><h3 class="mb-0">Products</h3></div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-end">
                    <li class="breadcrumb-item"><a href="/Admin/Dashboard">Dashboard</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Products</li>
                </ol>
            </div>
        </div>
        <!--end::Row-->
    </div>
    <!--end::Container-->
</div>
<!--end::App Content Header-->
<div class="card-header">
    <div class="row">
        <div class="col-sm-12 col-md-10">
            
        </div>
        <div class="col-sm-12 col-md-2 d-flex justify-content-end">
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#AddProductModal">
                <i class="bi bi-plus"></i>Add Product
            </button>
        </div>
    </div>
</div>

<!--begin::App Content-->
<div class="app-content">
    <!--begin::Container-->
    <div class="container-fluid">
        <!--begin::Row-->
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header"><h3 class="card-title">Available Products</h3></div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <partial name="./Add" />
                        <partial name="./Update" />
                        <partial name="_ResponsePartial" />
                        <partial name="_ModalPartial" />
                        <table id="products" class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>#SN.</th>
                                    <th>Image</th>
                                    <th>Name</th> 
                                    <th>Barcode</th>
                                    <th>Category</th>
                                    <th>Purchase</th>
                                    <th>MRP</th>
                                    <th>Wholesale</th>
                                    <th>Stock</th>
                                    <th>Low Stock</th>
                                    <th>Damage Stock</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>#SN.</th>
                                    <th>Image</th>                                    
                                    <th>Name</th>
                                    <th>Barcode</th>
                                    <th>Category</th>
                                    <th>Purchase</th>
                                    <th>MRP</th>
                                    <th>Wholesale</th>
                                    <th>Stock</th>
                                    <th>Low Stock</th>
                                    <th>Damage Stock</th>
                                    <th>Action</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card --> 
            </div>
            <!-- /.col -->
        </div>
        <!--end::Row-->
    </div>
    <!--end::Container-->
</div>
<!--end::App Content-->

@section Scripts{
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.datatables.net/2.2.2/js/dataTables.min.js"></script>

    <script>
        $(function () {
            $("#products").DataTable({
                processing: true,
                serverSide: true,
                responsive : true,
                lengthChange: true,
                autoWidth: false,
                searching: false,
                lengthMenu: [
                    [10, 25, 50, -1],
                    [10, 25, 50, "All"]
                ],
                ajax: {
                    url: "/Admin/Products/GetProductJsonData",
                    type: "POST",
                    contentType: "application/json", //must be added
                    dataType: "json", //better to add, not mandatory
                    data: function (d) {
                        d.SearchItem = {
                            Name: $("#SearchItem_Name").val(),
                            Description: $("#SearchItem_Description").val(),
                            PriceFrom: $("#SearchItem_PriceFrom").val() === ""? null : $("#SearchItem_PriceFrom").val(),
                            PriceTo: $("#SearchItem_PriceTo").val() === "" ? null : $("#SearchItem_PriceTo").val()
                        };
                        return JSON.stringify(d);
                    },
                },
                columnDefs: [
                    {
                        //use for left alignment view
                        targets: "_all",          
                        className: 'dt-left'
                    },                    
                    {   
                        //use for showing sequential id number
                        orderable: false,
                        targets: 0,
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    {
                        orderable: false,
                        targets: 1
                    },
                    {
                        orderable: false,
                        targets: -1,
                        render: function (data, type, row) {
                            console.log(type);
                            return `
                                <div class="d-flex justify-content-center">
                                    <div class="dropdown ms-auto">
                                                <i class="bi bi-three-dots" data-bs-toggle="dropdown"
                                                aria-expanded="false" role="button" title="Action"></i>
                                            <ul class="dropdown-menu">
                                                <li>
                                                    <button type="submit" class="dropdown-item showUpdateModal"
                                                        data-id='${data}' value='${data}' title="Edit">
                                                        <i class="default-color bi bi-pencil-square"></i>
                                                    Edit </button>
                                                </li>
                                                <li>
                                                    <button type="submit" class="dropdown-item
                                                        show-bs-modal" data-id='${data}' value='${data}'
                                                        title="Delete">
                                                        <i class="red-color bi bi-trash"></i>
                                                    Delete </button>
                                                </li>
                                            </ul>
                                        </div>
                                </div>`;
                        }
                    }
                ]
            });


            $('#products').on('click', '.show-bs-modal', function () {
                let id = $(this).data("id");
                let deleteModal = $("#modal-delete");
                deleteModal.find('.modal-body p').text('Are you sure you want to delete this product?');
                $('#delete-id').val(id);
                $('#delete-form').attr('action', '/admin/products/delete');
                deleteModal.modal('show');
            });

            $('#delete-button').click(function()
            {
                $('#delete-form').submit();
            });

            
            $(document).on('click', '.showUpdateModal', function () {
                const id = $(this).data('id');     
                Update(id);
            });
            

            //Generate barcode
            document.querySelectorAll('.generate-barcode').forEach(btn => {
                btn.addEventListener('click', () => {
                    const code = Math.floor(1e11 + Math.random() * 9e11);  
                    btn.closest('.modal')           
                        .querySelector('.barcode')   
                        .value = code;              
                });
            });

            //Get Categories
            function loadCategories($dropdown, selectedId = '') {
              return $.getJSON('/Admin/Products/GetCategories')
                .done(function (list) {
                  $dropdown.empty().append('<option value="">Select a category *</option>');

                  list.forEach(function (c) {
                    $dropdown.append(`<option value="${c.id}">${c.categoryName}</option>`);
                  });

                  if (selectedId) {
                    $dropdown.val(selectedId).trigger('change');
                  }
                })
                .fail(function () {
                  alert('Failed to load categories.');
                });
            }

            //Get Units
            function loadMeasurementUnits($dropdown, selectedId = '') {
              return $.getJSON('/Admin/Products/GetMeasurementUnits')
                .done(function (list) {
                  $dropdown.empty().append('<option value="">Select a measurement unit *</option>');

                  list.forEach(function (u) {
                    $dropdown.append(`<option value="${u.id}">${u.name}</option>`);
                  });

                  if (selectedId) {
                    $dropdown.val(selectedId).trigger('change');
                  }
                })
                .fail(function () {
                  alert('Failed to load measurement units.');
                });
            }

            //update
            function Update(id) {
              const $modal     = $('#updateProductModal');
              const $catSelect = $modal.find('.category-select');
              const $muSelect  = $modal.find('.measurementUnit-select');

              $.ajax({
                url: '/Admin/Products/GetProductForUpdate',
                type: 'GET',
                data: { id },
                dataType: 'json'
              })
                .done(function (resp) {
                  const p = resp.data || resp; 

                  $modal.find('#Id').val(p.id);
                  $modal.find('#Name').val(p.name);
                  $modal.find('#Barcode').val(p.barcode);
                  $modal.find('#PurchasePrice').val(p.purchasePrice);
                  $modal.find('#MRP').val(p.mrp);
                  $modal.find('#WholesalePrice').val(p.wholesalePrice);
                  $modal.find('#Stock').val(p.stock);
                  $modal.find('#LowStock').val(p.lowStock);
                  $modal.find('#DamageStock').val(p.damageStock);
                  $modal.find('#Description').val(p.description);
                  $modal.find('#ImageUrl').val(p.imageUrl);

                  $.when(
                    loadCategories($catSelect, p.categoryId),
                    loadMeasurementUnits($muSelect, p.measurementUnitId)
                  ).then(function () {
                    $modal.modal('show');
                  });
                })
                .fail(function () {
                  alert('Could not load product for editing.');
                });
            }

            // Add Product modal 
            $('#AddProductModal').on('show.bs.modal', function () {
              const $catSelect = $(this).find('.category-select');
              const $muSelect  = $(this).find('.measurementUnit-select');

              loadCategories($catSelect);      
              loadMeasurementUnits($muSelect); 
            });

            $('#add-button').click(function()
            {
                $('#addProductForm').submit();
            });

            $('#update-button').click(function()
            {
                $('#updateProductForm').submit();
            });

            $("#searchButton").click(function () {
                $('#products').DataTable().ajax.reload(null, false);
            });

        });
    </script>
}



